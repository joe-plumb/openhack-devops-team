# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
    paths: 
      - 'apis/user-java/**'
  pull_request:
    branches: [ master ]
    paths: 
      - 'apis/user-java/**'

jobs:
  test:
    defaults:
      run:
        working-directory: apis/user-java
    name: user-java unit test
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn clean install
        mvn test

  build:
    name: user-java docker build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automated release
        draft: false
        prerelease: false
    - name: docker build and push
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: devopsoh/api-user-java
        registry: openhackq811qdi1acr.azurecr.io
        dockerfile: apis/user-java/Dockerfile
        path: apis/user-java
        tag_with_ref: true
        tag_with_sha: true
  
  deploy:
    name: user-java deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackq811qdi1userjava'
        images: 'openhackq811qdi1acr.azurecr.io/devopsoh/api-user-java:sha-${{ github.sha }}'
