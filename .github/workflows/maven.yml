# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: 
      - master
    paths:
      - "apis/user-java/**"
      - .github/workflows/maven.yml
  pull_request:
    branches: [master]
    paths:
      - "apis/user-java/**"
      - .github/workflows/maven.yml

jobs:
  test:
    defaults:
      run:
        working-directory: apis/user-java
    name: user-java unit test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: |
          mvn clean install
          mvn test

  build:
    name: user-java docker build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    #needs: test ##used for action development
    steps:
      - uses: actions/checkout@v2
      - name: docker build and push
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: devopsoh/api-user-java
          registry: openhackq811qdi1acr.azurecr.io
          dockerfile: apis/user-java/Dockerfile
          path: apis/user-java
          tag_with_ref: false
          tag_with_sha: true
          tags: ${{ github.run_number }}

  deploy:
    name: user-java deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Get short SHA
        run: echo "::set-env name=short_sha::$(git rev-parse --short=7 HEAD)"
      - name: "Login via Azure CLI"
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: "openhackq811qdi1userjava"
          #images: "openhackq811qdi1acr.azurecr.io/devopsoh/api-user-java:${{ github.run_number }}" HACK below
          images: "openhackq811qdi1acr.azurecr.io/devopsoh/api-user-java:changeme"
          slot-name: staging
      - name: Check status of service
        run: |
          echo "Checking Service State..."
          service_state=$( curl https://openhackq811qdi1userjava-staging.azurewebsites.net/api/healthcheck/user-java | jq -r .status)
          while [ $service_state != "healthy" ]
          do
            sleep 5
            service_state=$( curl https://openhackq811qdi1userjava-staging.azurewebsites.net/api/healthcheck/user-java | jq -r .status)
            echo "service state: $service_state"
          done
          if [ $service_state == "healthy" ]
          then
            exit 0
          else
            exit 1
          fi
      - name: Swap slots
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az webapp deployment slot swap  -g openhackq811qdi1rg -n openhackq811qdi1userjava --slot staging --target-slot production
