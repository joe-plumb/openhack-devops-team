name: Build, test and push Trips API (Go)

on:
  push:
    branches: [ master ]
    paths:
      - 'apis/trips/**'
      - .github/workflows/go.yml
  pull_request:
    branches: [ master ]
    paths:
      - 'apis/trips/**'
      - .github/workflows/go.yml
defaults:
  run:
    working-directory: apis/trips

jobs:
  test:
    name: Trips API Unit Test
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v .
    - name: Test
      run: go test -v ./tests
  build:
    name: Trips API Docker Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: docker build and push
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: devopsoh/api-trips
        registry: openhackq811qdi1acr.azurecr.io
        dockerfile: apis/trips/Dockerfile
        path: apis/trips
        tag_with_sha: true
        tags: ${{ github.run_number }}
  deploy:
    name: Trips API Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Get short SHA
        run: echo "::set-env name=short_sha::$(git rev-parse --short=7 HEAD)"
      - name: "Login via Azure CLI"
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: "openhackq811qdi1trips"
          slot-name: "staging" 
          images: "openhackq811qdi1acr.azurecr.io/devopsoh/api-trips:sha-${{ env.short_sha }}"
      - name: Check status of service
        run: |
          echo "Checking Service State..."
          service_state=$( curl https://openhackq811qdi1trips-staging.azurewebsites.net/api/healthcheck/trips | jq -r .status)
          while [ $service_state != "Healthy" ]
          do
            sleep 5
            service_state=$( curl https://openhackq811qdi1trips-staging.azurewebsites.net/api/healthcheck/trips | jq -r .status)
            echo "service state: $service_state"
          done
          if [ $service_state == "Healthy" ]
          then
            exit 0
          else
            exit 1
          fi
      - name: Swap slots
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az webapp deployment slot swap  -g openhackq811qdi1rg -n openhackq811qdi1trips --slot staging --target-slot production
